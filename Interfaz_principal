package Proyecto_1;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import javafx.embed.swing.SwingFXUtils;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.ClipboardContent;
import javafx.scene.input.DragEvent;
import javafx.scene.input.Dragboard;
import javafx.scene.input.MouseEvent;
import javafx.scene.input.TransferMode;
import javafx.scene.layout.Pane;
import javafx.scene.shape.Line;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import javax.imageio.ImageIO;




public class Interfaz_principal extends Application {
    
    
    LinkedList listadoble = new LinkedList();
    Pane root = new Pane();

 
    
    @Override
    public void start(Stage primaryStage) {
        Button boton = new Button();  //Crear un bot贸n
        boton.setText("Calcular");  //Darle un texto al bot贸n
        boton.setOnAction(new EventHandler<ActionEvent>() { //La acci贸n que genera el boton al ser pulsado
            
            @Override
            public void handle(ActionEvent event) {
                System.out.println(listadoble);
            }
        });
        Button boton2 = new Button();
        boton2.setText("Insetar Herramienta");
        boton2.setOnAction(new EventHandler<ActionEvent>(){
        @Override
        public void handle(ActionEvent t) {
            FileChooser fileChooser = new FileChooser();
             
            // Tipos de extensi贸n permitidos
            FileChooser.ExtensionFilter extFilterJPG = new FileChooser.ExtensionFilter("JPG files (*.jpg)", "*.JPG");
            FileChooser.ExtensionFilter extFilterPNG = new FileChooser.ExtensionFilter("PNG files (*.png)", "*.PNG");
            fileChooser.getExtensionFilters().addAll(extFilterJPG, extFilterPNG);
              
            //Mostrar el cuadro para cargar imagenes
            File file = fileChooser.showOpenDialog(null);
            
                       
            try {
                double i = 10;
                double y = 10;
                BufferedImage bufferedImage = ImageIO.read(file);
                String prueba = file.getName();
                Image image = SwingFXUtils.toFXImage(bufferedImage, null);
                ImageView Mi_vista = new ImageView();
                Mi_vista.setImage(image);
                Mi_vista.setLayoutX(i);
                Mi_vista.setLayoutY(y);
                root.getChildren().add(Mi_vista);
                listadoble.addLast(prueba);
                
                Mi_vista.setOnDragDetected(new EventHandler<MouseEvent>(){
                @Override
                public void handle(MouseEvent evento){
                    Dragboard db = Mi_vista.startDragAndDrop(TransferMode.MOVE);
                    ClipboardContent cc = new ClipboardContent();
                    cc.putImage(Mi_vista.getImage());
                    db.setContent(cc);
                    
                    
                    evento.consume();
                    }         
                });
                root.setOnDragOver(new EventHandler<DragEvent>(){
                   @Override
                   public void handle(DragEvent drag){
                      Dragboard db3 = drag.getDragboard();
                      if (db3.hasImage()){
                          drag.acceptTransferModes(TransferMode.MOVE);
                      }
                      drag.consume();
                   } 
                });
                root.setOnDragDropped(new EventHandler<DragEvent>(){
                  @Override
                  public void handle(DragEvent drop){
                      Dragboard db2 = drop.getDragboard();
                      double x = drop.getSceneX();
                      double y = drop.getSceneY();
                      
                      //ImageView nueva = Mi_vista;
                      Mi_vista.setImage(db2.getImage());
                      Mi_vista.setX(x-5); // En caso de que la imagen se corra ante el drag and drop ir smanod o restando pixeles
                      Mi_vista.setY(y-5);
                      
                      
                      
                      root.getChildren().add(Mi_vista);
                      drop.setDropCompleted(true);
                      drop.consume();
                  }
                });
                
      
            } 
            catch (IOException ex) {
                Logger.getLogger(Interfaz_principal.class.getName()).log(Level.SEVERE, null, ex);
            }
 
        }
    });  
        Button boton4 = new Button();
        boton4.setText("Or");
       // boton4.setOnAction(lineas);
            

        Line div_1 = new Line(1190,0, 1190, 768);
        
 
        
        boton.setLayoutX(1200);
        boton.setLayoutY(600);
        
        boton2.setLayoutX(1200);
        boton2.setLayoutY(10);
        
        
        root.getChildren().add(boton);
        root.getChildren().add(boton2);
        root.getChildren().add(div_1);
        
        Scene scene1 = new Scene(root, 1366, 700);

        
        
        primaryStage.setTitle("Circuitos Integrados");
        primaryStage.setScene(scene1);
        primaryStage.show();
        
        
        
    }
    
    public static void main(String[] args) {
        launch(args);
    }
    
}
